[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "falcon-7b-finetuning"
version = "1.0.0"
description = "A production-ready ML engineering project for fine-tuning Falcon-7B using QLoRA and TRL"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Behrooz Azarkhalili", email = "ermiaazarkhalili@gmail.com"}
]
maintainers = [
    {name = "Behrooz Azarkhalili", email = "ermiaazarkhalili@gmail.com"}
]
keywords = ["machine-learning", "nlp", "falcon", "fine-tuning", "qlora", "peft"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.35.0",
    "datasets>=2.14.0",
    "accelerate>=0.24.0",
    "peft>=0.6.0",
    "trl>=0.7.0",
    "bitsandbytes>=0.41.0",
    "einops>=0.7.0",
    "pyyaml>=6.0",
    "omegaconf>=2.3.0",
    "python-dotenv>=1.0.0",
    "mlflow>=2.8.0",
    "tensorboard>=2.15.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "pydantic>=2.5.0",
    "tqdm>=4.66.0",
    "rich>=13.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
]
all = [
    "wandb>=0.16.0",
    "dvc>=3.30.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
]

[project.scripts]
falcon-train = "scripts.train:main"
falcon-evaluate = "scripts.evaluate:main"
falcon-inference = "scripts.inference:main"

[project.urls]
Homepage = "https://github.com/behroozazarkhalili/falcon-7b-finetuning"
Documentation = "https://falcon-7b-finetuning.readthedocs.io/"
Repository = "https://github.com/behroozazarkhalili/falcon-7b-finetuning.git"
Issues = "https://github.com/behroozazarkhalili/falcon-7b-finetuning/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 